
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/custom
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring

  myservice:
    build: ../myservice
    container_name: myservice
    restart: always
    ports:
      - "8080:8080"
    networks:
      - monitoring
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}

  backend-a-1:
    build: ../backend-a
    container_name: backend-a-1
    ports:
      - "8081:8080"
    environment:
      - INSTANCE_NAME=backend-a-1
      - SPRING_PROFILES_ACTIVE=loadbalancer
    networks:
      - monitoring


  backend-b-1:
    build: ../backend-b
    container_name: backend-b-1
    ports:
      - "8082:8080"
    environment:
      - INSTANCE_NAME=backend-b-1
      - SPRING_PROFILES_ACTIVE=loadbalancer
    networks:
      - monitoring

  eureka-server:
    image: eurekaserver:latest
    build: ../eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - monitoring
    profiles:
      - loadbalancer 



  backend-a-2:
    build: ../backend-a
    container_name: backend-a-2
    ports:
      - "8083:8080"
    environment:
      - INSTANCE_NAME=backend-a-2
      - SPRING_PROFILES_ACTIVE=loadbalancer
    networks:
      - monitoring
    profiles:
      - loadbalancer 

  backend-b-2:
    build: ../backend-b
    container_name: backend-b-2
    ports:
      - "8084:8080"
    environment:
      - INSTANCE_NAME=backend-b-2
      - SPRING_PROFILES_ACTIVE=loadbalancer
    networks:
      - monitoring
    profiles:
      - loadbalancer 

volumes:
  prometheus-data:
  grafana-data:

networks:
  monitoring:
    driver: bridge
